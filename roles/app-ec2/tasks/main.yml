---
- name: Cria o grupo de seguran√ßa para instancia EC2
  ec2_group:
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   state: present
   region: "{{ aws_region }}"
   vpc_id: "{{ vpc_id }}"
   name: "magento2"
   description: "grupo de seguranca da instancia magento2_app"
   rules:
     - proto: tcp
       from_port: 22
       to_port: 22
       cidr_ip: 0.0.0.0/0
     - proto: tcp
       from_port: 80
       to_port: 80
       cidr_ip: 0.0.0.0/0
   rules_egress:
     - proto: all
       cidr_ip: 0.0.0.0/0
  register: app_ec2_sg
  tags: ['app-ec2']

- name: Inicia a instancia EC2
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ public_subnet01_id }}"
    group_id: "{{ app_ec2_sg.group_id }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    wait: yes
    exact_count: "{{ count }}"
    count_tag:
      Name: "magento2"
    assign_public_ip: no
    keypair: "{{ keypair_name }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ volume_size }}"
    instance_tags:
     Name: "magento2"
  register: app_ec2_instance
  tags: [ 'app-ec2' ]

- name: Associa um IP publico com a instancia EC2
  ec2_eip:
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   state: present
   region: "{{ aws_region }}"
   in_vpc: yes
   reuse_existing_ip_allowed: yes
   device_id: "{{ item.id }}"
  tags: [ 'app-ec2' ]
  with_items: "{{ app_ec2_instance.tagged_instances }}"
  register: app_ec2_eip
  when: item.public_ip == None

- name: Aguarda 60 para a proxima task devido ao provisionamento da instancia Ec2
  wait_for_connection:
    delay: 60
    timeout: 300